

<!DOCTYPE html>
<html class="writer-html5" lang="en" >
<head>
  <meta charset="utf-8" />
  
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  
  <title>Discussion: Anti-aliasing Effect &mdash; Beacon-aug Opensource-09142021 documentation</title>
  

  
  <link rel="stylesheet" href="../_static/css/theme.css" type="text/css" />
  <link rel="stylesheet" href="../_static/pygments.css" type="text/css" />
  <link rel="stylesheet" href="../_static/pygments.css" type="text/css" />
  <link rel="stylesheet" href="../_static/css/theme.css" type="text/css" />
  <link rel="stylesheet" href="../_static/graphviz.css" type="text/css" />

  
  

  
  

  

  
  <!--[if lt IE 9]>
    <script src="../_static/js/html5shiv.min.js"></script>
  <![endif]-->
  
    
      <script type="text/javascript" id="documentation_options" data-url_root="../" src="../_static/documentation_options.js"></script>
        <script data-url_root="../" id="documentation_options" src="../_static/documentation_options.js"></script>
        <script src="../_static/jquery.js"></script>
        <script src="../_static/underscore.js"></script>
        <script src="../_static/doctools.js"></script>
        <script crossorigin="anonymous" integrity="sha256-Ae2Vz/4ePdIu6ZyI/5ZGsYnb+m0JlOmKPjt6XZ9JJkA=" src="https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.4/require.min.js"></script>
        <script async="async" src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>
        <script>window.MathJax = {"tex": {"inlineMath": [["$", "$"], ["\\(", "\\)"]], "processEscapes": true}, "options": {"ignoreHtmlClass": "tex2jax_ignore|mathjax_ignore|document", "processHtmlClass": "tex2jax_process|mathjax_process|math|output_area"}}</script>
    
    <script type="text/javascript" src="../_static/js/theme.js"></script>

    
    <link rel="index" title="Index" href="../genindex.html" />
    <link rel="search" title="Search" href="../search.html" />
    <link rel="next" title="Operator APIs" href="../API.html" />
    <link rel="prev" title="Tutorial: Imagenet-c" href="tutorial_imagenet_c.html" /> 
</head>

<body class="wy-body-for-nav">

   
  <div class="wy-grid-for-nav">
    
    <nav data-toggle="wy-nav-shift" class="wy-nav-side">
      <div class="wy-side-scroll">
        <div class="wy-side-nav-search" >
          

          
            <a href="../index.html" class="icon icon-home"> Beacon-aug
          

          
          </a>

          
            
            
              <div class="version">
                Opensource-09142021
              </div>
            
          

          
<div role="search">
  <form id="rtd-search-form" class="wy-form" action="../search.html" method="get">
    <input type="text" name="q" placeholder="Search docs" />
    <input type="hidden" name="check_keywords" value="yes" />
    <input type="hidden" name="area" value="default" />
  </form>
</div>

          
        </div>

        
        <div class="wy-menu wy-menu-vertical" data-spy="affix" role="navigation" aria-label="main navigation">
          
            
            
              
            
            
              <ul class="current">
<li class="toctree-l1"><a class="reference internal" href="../install.html">Install</a></li>
<li class="toctree-l1"><a class="reference internal" href="../operator%20overview.html">Operator Overview</a></li>
<li class="toctree-l1"><a class="reference internal" href="tutorial_img.html">Tutorial: Use on images</a></li>
<li class="toctree-l1"><a class="reference internal" href="tutorial_torch.html">Tutorial: Use on tensors</a></li>
<li class="toctree-l1"><a class="reference internal" href="BA2mmcv.html">Tutorial: Beacon_aug to MMCV</a></li>
<li class="toctree-l1"><a class="reference internal" href="tutorial_gan_based.html">Tutorial: GAN-based customized function</a></li>
<li class="toctree-l1"><a class="reference internal" href="tutorial_imagenet_c.html">Tutorial: Imagenet-c</a></li>
<li class="toctree-l1 current"><a class="current reference internal" href="#">Discussion: Anti-aliasing Effect</a><ul>
<li class="toctree-l2"><a class="reference internal" href="#1.-Discussion-on-“resize”-operator">1. Discussion on “resize” operator</a></li>
<li class="toctree-l2"><a class="reference internal" href="#2.-Discussion-on-“affine-transform”-operator">2. Discussion on “affine transform” operator</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../API.html">Operator APIs</a></li>
<li class="toctree-l1"><a class="reference internal" href="../properties.html">Property APIs</a></li>
<li class="toctree-l1"><a class="reference internal" href="../performance.html">Properties and Performance</a></li>
<li class="toctree-l1"><a class="reference internal" href="../contribute.html">Contribute</a></li>
<li class="toctree-l1"><a class="reference internal" href="../trouble%20shooting.html">Trouble shooting</a></li>
</ul>

            
          
        </div>
        
      </div>
    </nav>

    <section data-toggle="wy-nav-shift" class="wy-nav-content-wrap">

      
      <nav class="wy-nav-top" aria-label="top navigation">
        
          <i data-toggle="wy-nav-top" class="fa fa-bars"></i>
          <a href="../index.html">Beacon-aug</a>
        
      </nav>


      <div class="wy-nav-content">
        
        <div class="rst-content">
        
          

















<div role="navigation" aria-label="breadcrumbs navigation">

  <ul class="wy-breadcrumbs">
    
      <li><a href="../index.html" class="icon icon-home"></a> &raquo;</li>
        
      <li>Discussion: Anti-aliasing Effect</li>
    
    
      <li class="wy-breadcrumbs-aside">
        
          
            <a href="../_sources/ipynbs/aliasing-discussion.ipynb.txt" rel="nofollow"> View page source</a>
          
        
      </li>
    
  </ul>

  
  <hr/>
</div>
          <div role="main" class="document" itemscope="itemscope" itemtype="http://schema.org/Article">
           <div itemprop="articleBody">
            
  
<style>
/* CSS for nbsphinx extension */

/* remove conflicting styling from Sphinx themes */
div.nbinput.container div.prompt *,
div.nboutput.container div.prompt *,
div.nbinput.container div.input_area pre,
div.nboutput.container div.output_area pre,
div.nbinput.container div.input_area .highlight,
div.nboutput.container div.output_area .highlight {
    border: none;
    padding: 0;
    margin: 0;
    box-shadow: none;
}

div.nbinput.container > div[class*=highlight],
div.nboutput.container > div[class*=highlight] {
    margin: 0;
}

div.nbinput.container div.prompt *,
div.nboutput.container div.prompt * {
    background: none;
}

div.nboutput.container div.output_area .highlight,
div.nboutput.container div.output_area pre {
    background: unset;
}

div.nboutput.container div.output_area div.highlight {
    color: unset;  /* override Pygments text color */
}

/* avoid gaps between output lines */
div.nboutput.container div[class*=highlight] pre {
    line-height: normal;
}

/* input/output containers */
div.nbinput.container,
div.nboutput.container {
    display: -webkit-flex;
    display: flex;
    align-items: flex-start;
    margin: 0;
    width: 100%;
}
@media (max-width: 540px) {
    div.nbinput.container,
    div.nboutput.container {
        flex-direction: column;
    }
}

/* input container */
div.nbinput.container {
    padding-top: 5px;
}

/* last container */
div.nblast.container {
    padding-bottom: 5px;
}

/* input prompt */
div.nbinput.container div.prompt pre {
    color: #307FC1;
}

/* output prompt */
div.nboutput.container div.prompt pre {
    color: #BF5B3D;
}

/* all prompts */
div.nbinput.container div.prompt,
div.nboutput.container div.prompt {
    width: 4.5ex;
    padding-top: 5px;
    position: relative;
    user-select: none;
}

div.nbinput.container div.prompt > div,
div.nboutput.container div.prompt > div {
    position: absolute;
    right: 0;
    margin-right: 0.3ex;
}

@media (max-width: 540px) {
    div.nbinput.container div.prompt,
    div.nboutput.container div.prompt {
        width: unset;
        text-align: left;
        padding: 0.4em;
    }
    div.nboutput.container div.prompt.empty {
        padding: 0;
    }

    div.nbinput.container div.prompt > div,
    div.nboutput.container div.prompt > div {
        position: unset;
    }
}

/* disable scrollbars on prompts */
div.nbinput.container div.prompt pre,
div.nboutput.container div.prompt pre {
    overflow: hidden;
}

/* input/output area */
div.nbinput.container div.input_area,
div.nboutput.container div.output_area {
    -webkit-flex: 1;
    flex: 1;
    overflow: auto;
}
@media (max-width: 540px) {
    div.nbinput.container div.input_area,
    div.nboutput.container div.output_area {
        width: 100%;
    }
}

/* input area */
div.nbinput.container div.input_area {
    border: 1px solid #e0e0e0;
    border-radius: 2px;
    /*background: #f5f5f5;*/
}

/* override MathJax center alignment in output cells */
div.nboutput.container div[class*=MathJax] {
    text-align: left !important;
}

/* override sphinx.ext.imgmath center alignment in output cells */
div.nboutput.container div.math p {
    text-align: left;
}

/* standard error */
div.nboutput.container div.output_area.stderr {
    background: #fdd;
}

/* ANSI colors */
.ansi-black-fg { color: #3E424D; }
.ansi-black-bg { background-color: #3E424D; }
.ansi-black-intense-fg { color: #282C36; }
.ansi-black-intense-bg { background-color: #282C36; }
.ansi-red-fg { color: #E75C58; }
.ansi-red-bg { background-color: #E75C58; }
.ansi-red-intense-fg { color: #B22B31; }
.ansi-red-intense-bg { background-color: #B22B31; }
.ansi-green-fg { color: #00A250; }
.ansi-green-bg { background-color: #00A250; }
.ansi-green-intense-fg { color: #007427; }
.ansi-green-intense-bg { background-color: #007427; }
.ansi-yellow-fg { color: #DDB62B; }
.ansi-yellow-bg { background-color: #DDB62B; }
.ansi-yellow-intense-fg { color: #B27D12; }
.ansi-yellow-intense-bg { background-color: #B27D12; }
.ansi-blue-fg { color: #208FFB; }
.ansi-blue-bg { background-color: #208FFB; }
.ansi-blue-intense-fg { color: #0065CA; }
.ansi-blue-intense-bg { background-color: #0065CA; }
.ansi-magenta-fg { color: #D160C4; }
.ansi-magenta-bg { background-color: #D160C4; }
.ansi-magenta-intense-fg { color: #A03196; }
.ansi-magenta-intense-bg { background-color: #A03196; }
.ansi-cyan-fg { color: #60C6C8; }
.ansi-cyan-bg { background-color: #60C6C8; }
.ansi-cyan-intense-fg { color: #258F8F; }
.ansi-cyan-intense-bg { background-color: #258F8F; }
.ansi-white-fg { color: #C5C1B4; }
.ansi-white-bg { background-color: #C5C1B4; }
.ansi-white-intense-fg { color: #A1A6B2; }
.ansi-white-intense-bg { background-color: #A1A6B2; }

.ansi-default-inverse-fg { color: #FFFFFF; }
.ansi-default-inverse-bg { background-color: #000000; }

.ansi-bold { font-weight: bold; }
.ansi-underline { text-decoration: underline; }


div.nbinput.container div.input_area div[class*=highlight] > pre,
div.nboutput.container div.output_area div[class*=highlight] > pre,
div.nboutput.container div.output_area div[class*=highlight].math,
div.nboutput.container div.output_area.rendered_html,
div.nboutput.container div.output_area > div.output_javascript,
div.nboutput.container div.output_area:not(.rendered_html) > img{
    padding: 5px;
    margin: 0;
}

/* fix copybtn overflow problem in chromium (needed for 'sphinx_copybutton') */
div.nbinput.container div.input_area > div[class^='highlight'],
div.nboutput.container div.output_area > div[class^='highlight']{
    overflow-y: hidden;
}

/* hide copybtn icon on prompts (needed for 'sphinx_copybutton') */
.prompt a.copybtn {
    display: none;
}

/* Some additional styling taken form the Jupyter notebook CSS */
div.rendered_html table {
  border: none;
  border-collapse: collapse;
  border-spacing: 0;
  color: black;
  font-size: 12px;
  table-layout: fixed;
}
div.rendered_html thead {
  border-bottom: 1px solid black;
  vertical-align: bottom;
}
div.rendered_html tr,
div.rendered_html th,
div.rendered_html td {
  text-align: right;
  vertical-align: middle;
  padding: 0.5em 0.5em;
  line-height: normal;
  white-space: normal;
  max-width: none;
  border: none;
}
div.rendered_html th {
  font-weight: bold;
}
div.rendered_html tbody tr:nth-child(odd) {
  background: #f5f5f5;
}
div.rendered_html tbody tr:hover {
  background: rgba(66, 165, 245, 0.2);
}

/* CSS overrides for sphinx_rtd_theme */

/* 24px margin */
.nbinput.nblast.container,
.nboutput.nblast.container {
    margin-bottom: 19px;  /* padding has already 5px */
}

/* ... except between code cells! */
.nblast.container + .nbinput.container {
    margin-top: -19px;
}

.admonition > p:before {
    margin-right: 4px;  /* make room for the exclamation icon */
}

/* Fix math alignment, see https://github.com/rtfd/sphinx_rtd_theme/pull/686 */
.math {
    text-align: unset;
}
</style>
<div class="section" id="Discussion:-Anti-aliasing-Effect">
<h1>Discussion: Anti-aliasing Effect<a class="headerlink" href="#Discussion:-Anti-aliasing-Effect" title="Permalink to this headline">¶</a></h1>
<p>According to the paper “On Buggy Resizing Libraries and Surprising Subtleties in FID Calculation” by &#64;Richard Zhang, the selection of image resizing library and kernel matter to the Fréchet Inception (FID) score consistency because of the aliasing effect. (See: <a class="reference external" href="https://www.cs.cmu.edu/~clean-fid/">https://www.cs.cmu.edu/~clean-fid/</a>)</p>
<p>Thus, we recommend to use anti-aliasing from beacon_aug.</p>
<div class="nbinput docutils container">
<div class="prompt highlight-none notranslate"><div class="highlight"><pre><span></span>[2]:
</pre></div>
</div>
<div class="input_area highlight-ipython3 notranslate"><div class="highlight"><pre>
<span></span><span class="kn">import</span> <span class="nn">beacon_aug</span> <span class="k">as</span> <span class="nn">BA</span>
<span class="n">BA</span><span class="o">.</span><span class="n">properties</span><span class="o">.</span><span class="n">isAntiAliasing</span><span class="p">(</span><span class="n">BA</span><span class="o">.</span><span class="n">Resize</span><span class="p">,</span> <span class="n">library</span><span class="o">=</span> <span class="s2">&quot;torchvision&quot;</span><span class="p">,</span><span class="n">interpolation</span> <span class="o">=</span> <span class="s2">&quot;linear&quot;</span> <span class="p">)</span>
</pre></div>
</div>
</div>
<div class="nboutput docutils container">
<div class="prompt empty docutils container">
</div>
<div class="output_area docutils container">
<div class="highlight"><pre>
InterpolationMode.BILINEAR
</pre></div></div>
</div>
<div class="nboutput nblast docutils container">
<div class="prompt highlight-none notranslate"><div class="highlight"><pre><span></span>[2]:
</pre></div>
</div>
<div class="output_area docutils container">
<div class="highlight"><pre>
True
</pre></div></div>
</div>
<div class="section" id="1.-Discussion-on-“resize”-operator">
<h2>1. Discussion on “resize” operator<a class="headerlink" href="#1.-Discussion-on-“resize”-operator" title="Permalink to this headline">¶</a></h2>
<p>Whether or not the operator is anti-aliasing depends on the PSNR of original and rescaled image As example showing below, only PSNR of operator-interpolation combinations &gt; 18dB are anti-aliasing.</p>
<div class="nbinput docutils container">
<div class="prompt highlight-none notranslate"><div class="highlight"><pre><span></span>[1]:
</pre></div>
</div>
<div class="input_area highlight-ipython3 notranslate"><div class="highlight"><pre>
<span></span><span class="kn">import</span> <span class="nn">cv2</span>
<span class="kn">import</span> <span class="nn">torchvision.transforms.functional</span> <span class="k">as</span> <span class="nn">torch_f</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="nn">np</span>
<span class="kn">import</span> <span class="nn">beacon_aug</span> <span class="k">as</span> <span class="nn">BA</span>


<span class="n">library</span> <span class="o">=</span> <span class="s1">&#39;torchvision&#39;</span>
<span class="n">interpolation</span><span class="o">=</span><span class="s1">&#39;linear&#39;</span>

<span class="k">def</span> <span class="nf">psnr_uint8</span><span class="p">(</span><span class="n">img0</span><span class="p">,</span> <span class="n">img1</span><span class="p">):</span>
    <span class="k">return</span> <span class="o">-</span><span class="mi">10</span><span class="o">*</span><span class="n">np</span><span class="o">.</span><span class="n">log10</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">mean</span><span class="p">((</span><span class="n">img0</span><span class="o">/</span><span class="mf">255.</span> <span class="o">-</span> <span class="n">img1</span><span class="o">/</span><span class="mf">255.</span><span class="p">)</span><span class="o">**</span><span class="mi">2</span><span class="p">))</span>

<span class="k">def</span> <span class="nf">resize_psnr</span><span class="p">(</span><span class="n">library</span><span class="o">=</span><span class="s1">&#39;torchvision&#39;</span><span class="p">,</span> <span class="n">interpolation</span><span class="o">=</span><span class="s1">&#39;linear&#39;</span><span class="p">):</span>
    <span class="n">img_np</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">zeros</span><span class="p">((</span><span class="mi">128</span><span class="p">,</span> <span class="mi">128</span><span class="p">,</span> <span class="mi">3</span><span class="p">),</span> <span class="n">dtype</span><span class="o">=</span><span class="s1">&#39;uint8&#39;</span><span class="p">)</span><span class="o">+</span><span class="mi">255</span>
    <span class="n">img_np</span> <span class="o">=</span> <span class="n">cv2</span><span class="o">.</span><span class="n">circle</span><span class="p">(</span><span class="n">img_np</span><span class="p">,</span> <span class="p">(</span><span class="mi">128</span><span class="o">//</span><span class="mi">2</span><span class="p">,</span> <span class="mi">128</span><span class="o">//</span><span class="mi">2</span><span class="p">),</span> <span class="mi">50</span><span class="p">,</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">),</span> <span class="mi">1</span><span class="p">)</span>

    <span class="c1"># interpolation_all = [&quot;nearest&quot;, &quot;linear&quot;, &quot;area&quot;, &quot;cubic&quot;, &quot;Lanczos&quot;, &quot;hamming&quot;]</span>
    <span class="n">interpolation_dict</span> <span class="o">=</span> <span class="p">{</span><span class="s2">&quot;albumentations&quot;</span><span class="p">:</span>
                    <span class="p">{</span><span class="s2">&quot;nearest&quot;</span><span class="p">:</span> <span class="n">cv2</span><span class="o">.</span><span class="n">INTER_NEAREST</span><span class="p">,</span>
                    <span class="s2">&quot;linear&quot;</span><span class="p">:</span> <span class="n">cv2</span><span class="o">.</span><span class="n">INTER_LINEAR</span><span class="p">,</span>
                    <span class="s2">&quot;area&quot;</span><span class="p">:</span> <span class="n">cv2</span><span class="o">.</span><span class="n">INTER_AREA</span><span class="p">,</span>
                    <span class="s2">&quot;cubic&quot;</span><span class="p">:</span> <span class="n">cv2</span><span class="o">.</span><span class="n">INTER_CUBIC</span><span class="p">,</span>
                    <span class="s2">&quot;Lanczos&quot;</span><span class="p">:</span> <span class="n">cv2</span><span class="o">.</span><span class="n">INTER_LANCZOS4</span><span class="p">,</span>
                    <span class="p">},</span>
            <span class="s2">&quot;imgaug&quot;</span><span class="p">:</span>
                    <span class="p">{</span><span class="s2">&quot;nearest&quot;</span><span class="p">:</span> <span class="s2">&quot;nearest&quot;</span><span class="p">,</span>
                    <span class="s2">&quot;linear&quot;</span><span class="p">:</span> <span class="s2">&quot;linear&quot;</span><span class="p">,</span>
                    <span class="s2">&quot;cubic&quot;</span><span class="p">:</span> <span class="s2">&quot;cubic&quot;</span><span class="p">,</span>
                    <span class="s2">&quot;area&quot;</span><span class="p">:</span> <span class="s2">&quot;area&quot;</span>
                    <span class="p">},</span>
            <span class="s2">&quot;torchvision&quot;</span><span class="p">:</span>
                    <span class="p">{</span><span class="s2">&quot;nearest&quot;</span><span class="p">:</span> <span class="n">torch_f</span><span class="o">.</span><span class="n">InterpolationMode</span><span class="o">.</span><span class="n">NEAREST</span><span class="p">,</span>
                    <span class="s2">&quot;linear&quot;</span><span class="p">:</span> <span class="n">torch_f</span><span class="o">.</span><span class="n">InterpolationMode</span><span class="o">.</span><span class="n">BILINEAR</span><span class="p">,</span>
                    <span class="s2">&quot;box&quot;</span><span class="p">:</span> <span class="n">torch_f</span><span class="o">.</span><span class="n">InterpolationMode</span><span class="o">.</span><span class="n">BOX</span><span class="p">,</span>
                    <span class="s2">&quot;cubic&quot;</span><span class="p">:</span> <span class="n">torch_f</span><span class="o">.</span><span class="n">InterpolationMode</span><span class="o">.</span><span class="n">BICUBIC</span><span class="p">,</span>
                    <span class="s2">&quot;Lanczos&quot;</span><span class="p">:</span> <span class="n">torch_f</span><span class="o">.</span><span class="n">InterpolationMode</span><span class="o">.</span><span class="n">LANCZOS</span><span class="p">,</span>
                    <span class="s2">&quot;hamming&quot;</span><span class="p">:</span> <span class="n">torch_f</span><span class="o">.</span><span class="n">InterpolationMode</span><span class="o">.</span><span class="n">HAMMING</span><span class="p">,</span>
                    <span class="p">}}</span>
    <span class="n">interp</span> <span class="o">=</span> <span class="n">interpolation_dict</span><span class="p">[</span><span class="n">library</span><span class="p">][</span><span class="n">interpolation</span><span class="p">]</span> <span class="k">if</span> <span class="n">library</span> <span class="ow">in</span> <span class="n">interpolation_dict</span> <span class="k">else</span> <span class="n">interpolation</span>
    <span class="c1"># print(interp)</span>

    <span class="n">op</span> <span class="o">=</span> <span class="n">BA</span><span class="o">.</span><span class="n">Resize</span><span class="p">(</span><span class="n">p</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">library</span><span class="o">=</span><span class="n">library</span><span class="p">,</span> <span class="n">interpolation</span><span class="o">=</span><span class="n">interp</span><span class="p">,</span> <span class="n">height</span><span class="o">=</span><span class="mi">16</span><span class="p">,</span> <span class="n">width</span><span class="o">=</span><span class="mi">16</span><span class="p">)</span>
    <span class="n">op_up</span> <span class="o">=</span> <span class="n">BA</span><span class="o">.</span><span class="n">Resize</span><span class="p">(</span><span class="n">p</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">library</span><span class="o">=</span><span class="n">library</span><span class="p">,</span> <span class="n">interpolation</span><span class="o">=</span><span class="n">interp</span><span class="p">,</span> <span class="n">height</span><span class="o">=</span><span class="mi">128</span><span class="p">,</span> <span class="n">width</span><span class="o">=</span><span class="mi">128</span><span class="p">)</span>

    <span class="n">img_resized</span> <span class="o">=</span> <span class="n">op</span><span class="p">(</span><span class="n">image</span><span class="o">=</span><span class="n">img_np</span><span class="p">)[</span><span class="s2">&quot;image&quot;</span><span class="p">]</span><span class="o">.</span><span class="n">copy</span><span class="p">()</span>
    <span class="n">img_up</span> <span class="o">=</span> <span class="n">op_up</span><span class="p">(</span><span class="n">image</span><span class="o">=</span><span class="n">img_resized</span><span class="p">)[</span><span class="s2">&quot;image&quot;</span><span class="p">]</span><span class="o">.</span><span class="n">copy</span><span class="p">()</span>

    <span class="k">return</span> <span class="n">psnr_uint8</span><span class="p">(</span><span class="n">img_np</span><span class="p">,</span> <span class="n">img_up</span><span class="p">),</span> <span class="n">img_up</span>


<span class="n">img_np</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">zeros</span><span class="p">((</span><span class="mi">128</span><span class="p">,</span> <span class="mi">128</span><span class="p">,</span> <span class="mi">3</span><span class="p">),</span> <span class="n">dtype</span><span class="o">=</span><span class="s1">&#39;uint8&#39;</span><span class="p">)</span><span class="o">+</span><span class="mi">255</span>
<span class="n">img_np</span> <span class="o">=</span> <span class="n">cv2</span><span class="o">.</span><span class="n">circle</span><span class="p">(</span><span class="n">img_np</span><span class="p">,</span> <span class="p">(</span><span class="mi">128</span><span class="o">//</span><span class="mi">2</span><span class="p">,</span> <span class="mi">128</span><span class="o">//</span><span class="mi">2</span><span class="p">),</span> <span class="mi">50</span><span class="p">,</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">),</span> <span class="mi">1</span><span class="p">)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">12</span><span class="p">,</span><span class="mi">8</span><span class="p">))</span>
<span class="n">plt</span><span class="o">.</span><span class="n">subplot</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">imshow</span><span class="p">(</span><span class="n">img_np</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xticks</span><span class="p">([])</span>
<span class="n">plt</span><span class="o">.</span><span class="n">yticks</span><span class="p">([])</span>

<span class="k">for</span> <span class="p">(</span><span class="n">ii</span><span class="p">,</span><span class="n">interp</span><span class="p">)</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">([</span><span class="s1">&#39;nearest&#39;</span><span class="p">,</span> <span class="s1">&#39;linear&#39;</span><span class="p">,</span> <span class="s1">&#39;box&#39;</span><span class="p">,</span> <span class="s1">&#39;cubic&#39;</span><span class="p">,</span> <span class="s1">&#39;Lanczos&#39;</span><span class="p">,</span> <span class="s1">&#39;hamming&#39;</span><span class="p">]):</span>
    <span class="n">plt</span><span class="o">.</span><span class="n">subplot</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">1</span><span class="o">+</span><span class="n">ii</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span>
    <span class="n">psnr</span><span class="p">,</span> <span class="n">img_up</span> <span class="o">=</span> <span class="n">resize_psnr</span><span class="p">(</span><span class="n">library</span><span class="o">=</span><span class="s1">&#39;torchvision&#39;</span><span class="p">,</span> <span class="n">interpolation</span><span class="o">=</span><span class="n">interp</span><span class="p">)</span>
    <span class="n">plt</span><span class="o">.</span><span class="n">imshow</span><span class="p">(</span><span class="n">img_up</span><span class="p">)</span>
    <span class="n">plt</span><span class="o">.</span><span class="n">xticks</span><span class="p">([])</span>
    <span class="n">plt</span><span class="o">.</span><span class="n">yticks</span><span class="p">([])</span>
    <span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s1">&#39;</span><span class="si">%.2f</span><span class="s1"> [tv, </span><span class="si">%s</span><span class="s1">]&#39;</span><span class="o">%</span><span class="p">(</span><span class="n">psnr</span><span class="p">,</span> <span class="n">interp</span><span class="p">))</span>

<span class="k">for</span> <span class="p">(</span><span class="n">ii</span><span class="p">,</span><span class="n">interp</span><span class="p">)</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">([</span><span class="s1">&#39;nearest&#39;</span><span class="p">,</span> <span class="s1">&#39;linear&#39;</span><span class="p">,</span> <span class="s1">&#39;cubic&#39;</span><span class="p">,</span> <span class="s1">&#39;area&#39;</span><span class="p">]):</span>
    <span class="n">plt</span><span class="o">.</span><span class="n">subplot</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="o">+</span><span class="n">ii</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span>
    <span class="n">psnr</span><span class="p">,</span> <span class="n">img_up</span> <span class="o">=</span> <span class="n">resize_psnr</span><span class="p">(</span><span class="n">library</span><span class="o">=</span><span class="s1">&#39;imgaug&#39;</span><span class="p">,</span> <span class="n">interpolation</span><span class="o">=</span><span class="n">interp</span><span class="p">)</span>
    <span class="n">plt</span><span class="o">.</span><span class="n">imshow</span><span class="p">(</span><span class="n">img_up</span><span class="p">)</span>
    <span class="n">plt</span><span class="o">.</span><span class="n">xticks</span><span class="p">([])</span>
    <span class="n">plt</span><span class="o">.</span><span class="n">yticks</span><span class="p">([])</span>
    <span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s1">&#39;</span><span class="si">%.2f</span><span class="s1"> [ia, </span><span class="si">%s</span><span class="s1">]&#39;</span><span class="o">%</span><span class="p">(</span><span class="n">psnr</span><span class="p">,</span> <span class="n">interp</span><span class="p">))</span>

<span class="k">for</span> <span class="p">(</span><span class="n">ii</span><span class="p">,</span><span class="n">interp</span><span class="p">)</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">([</span><span class="s1">&#39;nearest&#39;</span><span class="p">,</span> <span class="s1">&#39;linear&#39;</span><span class="p">,</span> <span class="s1">&#39;area&#39;</span><span class="p">,</span> <span class="s1">&#39;cubic&#39;</span><span class="p">,</span> <span class="s1">&#39;Lanczos&#39;</span><span class="p">]):</span>
    <span class="n">plt</span><span class="o">.</span><span class="n">subplot</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">15</span><span class="o">+</span><span class="n">ii</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span>
    <span class="n">psnr</span><span class="p">,</span> <span class="n">img_up</span> <span class="o">=</span> <span class="n">resize_psnr</span><span class="p">(</span><span class="n">library</span><span class="o">=</span><span class="s1">&#39;albumentations&#39;</span><span class="p">,</span> <span class="n">interpolation</span><span class="o">=</span><span class="n">interp</span><span class="p">)</span>
    <span class="n">plt</span><span class="o">.</span><span class="n">imshow</span><span class="p">(</span><span class="n">img_up</span><span class="p">)</span>
    <span class="n">plt</span><span class="o">.</span><span class="n">xticks</span><span class="p">([])</span>
    <span class="n">plt</span><span class="o">.</span><span class="n">yticks</span><span class="p">([])</span>
    <span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s1">&#39;</span><span class="si">%.2f</span><span class="s1"> [alb, </span><span class="si">%s</span><span class="s1">]&#39;</span><span class="o">%</span><span class="p">(</span><span class="n">psnr</span><span class="p">,</span> <span class="n">interp</span><span class="p">))</span>

<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>

</pre></div>
</div>
</div>
<div class="nboutput nblast docutils container">
<div class="prompt empty docutils container">
</div>
<div class="output_area docutils container">
<img alt="../_images/ipynbs_aliasing-discussion_4_0.png" src="../_images/ipynbs_aliasing-discussion_4_0.png" />
</div>
</div>
</div>
<div class="section" id="2.-Discussion-on-“affine-transform”-operator">
<h2>2. Discussion on “affine transform” operator<a class="headerlink" href="#2.-Discussion-on-“affine-transform”-operator" title="Permalink to this headline">¶</a></h2>
<div class="nbinput docutils container">
<div class="prompt highlight-none notranslate"><div class="highlight"><pre><span></span>[3]:
</pre></div>
</div>
<div class="input_area highlight-ipython3 notranslate"><div class="highlight"><pre>

<span></span><span class="n">interpolation_dict</span> <span class="o">=</span> <span class="p">{</span><span class="s2">&quot;albumentations&quot;</span><span class="p">:</span>
                      <span class="p">{</span><span class="s2">&quot;nearest&quot;</span><span class="p">:</span> <span class="n">cv2</span><span class="o">.</span><span class="n">INTER_NEAREST</span><span class="p">,</span>
                       <span class="s2">&quot;linear&quot;</span><span class="p">:</span> <span class="n">cv2</span><span class="o">.</span><span class="n">INTER_LINEAR</span><span class="p">,</span>
                       <span class="s2">&quot;area&quot;</span><span class="p">:</span> <span class="n">cv2</span><span class="o">.</span><span class="n">INTER_AREA</span><span class="p">,</span>
                       <span class="s2">&quot;cubic&quot;</span><span class="p">:</span> <span class="n">cv2</span><span class="o">.</span><span class="n">INTER_CUBIC</span><span class="p">,</span>
                       <span class="s2">&quot;Lanczos&quot;</span><span class="p">:</span> <span class="n">cv2</span><span class="o">.</span><span class="n">INTER_LANCZOS4</span><span class="p">,</span>
                       <span class="p">},</span>
                      <span class="s2">&quot;imgaug-skimage&quot;</span><span class="p">:</span>
                            <span class="p">{</span><span class="s2">&quot;nearest&quot;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
                            <span class="s2">&quot;linear&quot;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
                            <span class="s2">&quot;cubic&quot;</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span>
                            <span class="s2">&quot;quartic&quot;</span><span class="p">:</span> <span class="mi">4</span><span class="p">,</span>
                            <span class="s2">&quot;quintic&quot;</span><span class="p">:</span><span class="mf">5.</span>
                            <span class="p">},</span>
                       <span class="s2">&quot;imgaug-cv2&quot;</span><span class="p">:</span>
                            <span class="p">{</span><span class="s2">&quot;nearest&quot;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
                            <span class="s2">&quot;linear&quot;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
                            <span class="s2">&quot;cubic&quot;</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span>
                            <span class="p">},</span>
                      <span class="s2">&quot;torchvision&quot;</span><span class="p">:</span>
                        <span class="p">{</span><span class="s2">&quot;nearest&quot;</span><span class="p">:</span> <span class="n">torch_f</span><span class="o">.</span><span class="n">InterpolationMode</span><span class="o">.</span><span class="n">NEAREST</span><span class="p">,</span>
                        <span class="s2">&quot;linear&quot;</span><span class="p">:</span> <span class="n">torch_f</span><span class="o">.</span><span class="n">InterpolationMode</span><span class="o">.</span><span class="n">BILINEAR</span><span class="p">,</span>
                        <span class="s2">&quot;box&quot;</span><span class="p">:</span> <span class="n">torch_f</span><span class="o">.</span><span class="n">InterpolationMode</span><span class="o">.</span><span class="n">BOX</span><span class="p">,</span>
                        <span class="s2">&quot;cubic&quot;</span><span class="p">:</span> <span class="n">torch_f</span><span class="o">.</span><span class="n">InterpolationMode</span><span class="o">.</span><span class="n">BICUBIC</span><span class="p">,</span>
                        <span class="s2">&quot;Lanczos&quot;</span><span class="p">:</span> <span class="n">torch_f</span><span class="o">.</span><span class="n">InterpolationMode</span><span class="o">.</span><span class="n">LANCZOS</span><span class="p">,</span>
                        <span class="s2">&quot;hamming&quot;</span><span class="p">:</span> <span class="n">torch_f</span><span class="o">.</span><span class="n">InterpolationMode</span><span class="o">.</span><span class="n">HAMMING</span><span class="p">,</span>
                        <span class="p">},</span>
                      <span class="s2">&quot;keras&quot;</span><span class="p">:</span>
                        <span class="p">{</span><span class="s2">&quot;zero&quot;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
                        <span class="s2">&quot;linear&quot;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
                        <span class="s2">&quot;quartic&quot;</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
                        <span class="s2">&quot;cubic&quot;</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span>
                        <span class="p">}</span>
                       <span class="p">}</span>
<span class="n">interpolation_all</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&quot;zero&quot;</span><span class="p">,</span><span class="s2">&quot;nearest&quot;</span><span class="p">,</span> <span class="s2">&quot;linear&quot;</span><span class="p">,</span> <span class="s2">&quot;area&quot;</span><span class="p">,</span><span class="s2">&quot;cubic&quot;</span><span class="p">,</span><span class="s2">&quot;quartic&quot;</span><span class="p">,</span> <span class="s2">&quot;Lanczos&quot;</span><span class="p">,</span><span class="s2">&quot;hamming&quot;</span><span class="p">]</span>


<span class="n">f</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">subplots</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">interpolation_dict</span><span class="p">),</span> <span class="nb">len</span><span class="p">(</span><span class="n">interpolation_all</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">12</span><span class="p">,</span><span class="mi">6</span><span class="p">))</span>
<span class="k">for</span> <span class="n">i_k</span><span class="p">,</span> <span class="n">kernel</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span> <span class="n">interpolation_all</span><span class="p">):</span>
    <span class="k">for</span> <span class="n">i_l</span><span class="p">,</span> <span class="n">library</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">interpolation_dict</span><span class="p">):</span>
        <span class="n">ax</span><span class="p">[</span><span class="n">i_l</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">text</span><span class="p">(</span><span class="mf">0.3</span><span class="p">,</span> <span class="mf">0.5</span><span class="p">,</span> <span class="n">library</span><span class="p">)</span>
        <span class="n">ax</span><span class="p">[</span><span class="n">i_l</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">axis</span><span class="p">(</span><span class="s2">&quot;off&quot;</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">kernel</span> <span class="ow">in</span> <span class="n">interpolation_dict</span><span class="p">[</span><span class="n">library</span><span class="p">]:</span>
            <span class="n">interp</span><span class="o">=</span> <span class="n">interpolation_dict</span><span class="p">[</span><span class="n">library</span><span class="p">][</span><span class="n">kernel</span><span class="p">]</span>

            <span class="k">if</span> <span class="n">library</span> <span class="o">==</span> <span class="s2">&quot;albumentations&quot;</span><span class="p">:</span>
                <span class="n">aug</span> <span class="o">=</span> <span class="n">BA</span><span class="o">.</span><span class="n">Affine</span><span class="p">(</span><span class="n">p</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="n">library</span><span class="o">=</span><span class="n">library</span><span class="p">,</span> <span class="n">scale</span><span class="o">=</span><span class="mf">0.25</span><span class="p">,</span> <span class="n">interpolation</span><span class="o">=</span> <span class="n">interp</span><span class="p">)</span>
            <span class="k">elif</span> <span class="n">library</span> <span class="o">==</span> <span class="s2">&quot;imgaug-cv2&quot;</span> <span class="p">:</span> <span class="c1">#library == &quot;imgaug&quot; or &quot;torchvision&quot;</span>
                <span class="n">aug</span> <span class="o">=</span> <span class="n">BA</span><span class="o">.</span><span class="n">Affine</span><span class="p">(</span><span class="n">p</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="n">library</span><span class="o">=</span><span class="s2">&quot;imgaug&quot;</span><span class="p">,</span> <span class="n">scale</span> <span class="o">=</span> <span class="mf">0.25</span><span class="p">,</span> <span class="n">order</span> <span class="o">=</span> <span class="n">interp</span><span class="p">,</span><span class="n">backend</span><span class="o">=</span><span class="s2">&quot;cv2&quot;</span><span class="p">)</span>
            <span class="k">elif</span> <span class="n">library</span> <span class="o">==</span> <span class="s2">&quot;imgaug-skimage&quot;</span> <span class="p">:</span> <span class="c1">#library == &quot;imgaug&quot; or &quot;torchvision&quot;</span>
                <span class="n">aug</span> <span class="o">=</span> <span class="n">BA</span><span class="o">.</span><span class="n">Affine</span><span class="p">(</span><span class="n">p</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="n">library</span><span class="o">=</span><span class="s2">&quot;imgaug&quot;</span><span class="p">,</span> <span class="n">scale</span> <span class="o">=</span> <span class="mf">0.25</span><span class="p">,</span> <span class="n">order</span> <span class="o">=</span> <span class="n">interp</span><span class="p">,</span><span class="n">backend</span><span class="o">=</span><span class="s2">&quot;skimage&quot;</span><span class="p">)</span>
            <span class="k">elif</span> <span class="n">library</span> <span class="o">==</span> <span class="s2">&quot;torch&quot;</span><span class="p">:</span>
                <span class="n">aug</span> <span class="o">=</span> <span class="n">BA</span><span class="o">.</span><span class="n">Affine</span><span class="p">(</span><span class="n">p</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="n">library</span><span class="o">=</span><span class="n">library</span><span class="p">,</span> <span class="n">scale</span><span class="o">=</span> <span class="p">(</span><span class="mf">0.25</span><span class="p">,</span> <span class="mf">0.25</span><span class="p">),</span> <span class="n">interpolation</span><span class="o">=</span> <span class="n">interp</span><span class="p">)</span>
            <span class="k">elif</span> <span class="n">library</span> <span class="o">==</span> <span class="s2">&quot;keras&quot;</span><span class="p">:</span>
                <span class="n">aug</span> <span class="o">=</span> <span class="n">BA</span><span class="o">.</span><span class="n">Affine</span><span class="p">(</span><span class="n">p</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="n">library</span><span class="o">=</span><span class="n">library</span><span class="p">,</span> <span class="n">zx</span><span class="o">=</span><span class="mi">4</span><span class="p">,</span><span class="n">zy</span><span class="o">=</span><span class="mi">4</span><span class="p">,</span> <span class="n">order</span><span class="o">=</span><span class="n">interp</span><span class="p">)</span>

            <span class="n">img_resized</span> <span class="o">=</span> <span class="n">aug</span><span class="p">(</span><span class="n">image</span><span class="o">=</span><span class="n">img_np</span><span class="p">)[</span><span class="s2">&quot;image&quot;</span><span class="p">]</span><span class="o">.</span><span class="n">copy</span><span class="p">()</span>
            <span class="n">ax</span><span class="p">[</span><span class="n">i_l</span><span class="p">,</span> <span class="n">i_k</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">imshow</span><span class="p">(</span><span class="n">img_resized</span><span class="p">[</span><span class="mi">48</span><span class="p">:</span><span class="mi">48</span><span class="o">+</span><span class="mi">32</span><span class="p">,</span><span class="mi">48</span><span class="p">:</span><span class="mi">48</span><span class="o">+</span><span class="mi">32</span> <span class="p">])</span>
            <span class="n">ax</span><span class="p">[</span><span class="n">i_l</span><span class="p">,</span> <span class="n">i_k</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">set_title</span><span class="p">(</span><span class="n">kernel</span> <span class="p">)</span>
        <span class="n">ax</span><span class="p">[</span><span class="n">i_l</span><span class="p">,</span><span class="n">i_k</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">axis</span><span class="p">(</span><span class="s1">&#39;off&#39;</span><span class="p">)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
</pre></div>
</div>
</div>
<div class="nboutput nblast docutils container">
<div class="prompt empty docutils container">
</div>
<div class="output_area docutils container">
<img alt="../_images/ipynbs_aliasing-discussion_6_0.svg" src="../_images/ipynbs_aliasing-discussion_6_0.svg" /></div>
</div>
</div>
</div>


           </div>
           
          </div>
          <footer>
    <div class="rst-footer-buttons" role="navigation" aria-label="footer navigation">
        <a href="../API.html" class="btn btn-neutral float-right" title="Operator APIs" accesskey="n" rel="next">Next <span class="fa fa-arrow-circle-right" aria-hidden="true"></span></a>
        <a href="tutorial_imagenet_c.html" class="btn btn-neutral float-left" title="Tutorial: Imagenet-c" accesskey="p" rel="prev"><span class="fa fa-arrow-circle-left" aria-hidden="true"></span> Previous</a>
    </div>

  <hr/>

  <div role="contentinfo">
    <p>
        &#169; Copyright 2021, Adobe.

    </p>
  </div>
    
    
    
    Built with <a href="https://www.sphinx-doc.org/">Sphinx</a> using a
    
    <a href="https://github.com/readthedocs/sphinx_rtd_theme">theme</a>
    
    provided by <a href="https://readthedocs.org">Read the Docs</a>. 

</footer>
        </div>
      </div>

    </section>

  </div>
  

  <script type="text/javascript">
      jQuery(function () {
          SphinxRtdTheme.Navigation.enable(true);
      });
  </script>

  
  
    
   

</body>
</html>